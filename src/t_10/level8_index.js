const canvas=document.getElementById("gamecanvas"),canvas_square_size=624;canvas.width=canvas_square_size+1,canvas.height=canvas_square_size+1;const ctx=canvas.getContext("2d");ctx.fillStyle="rgba(0,0,0, 0.0)";const bw=48,bh=48,p=0,num_of_rows_columns=canvas_square_size/bw;function getRandomInt(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e+1))+e}function randomString(e,t){return[...Array(getRandomInt(e,t))].map(e=>(~~(36*Math.random())).toString(36)).join("")}function isFunction(e){return e&&"[object Function]"==={}.toString.call(e)}class Game{constructor(){this.game_grid=[[1,1,1,1,1,1,2,1,1,1,1,4,1],[13,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,1],[6,1,1,1,1,1,2,1,1,1,1,1,-2],[-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,13,-2],[1,-2,1,1,1,1,2,1,1,1,1,6,5],[1,-2,13,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2],[1,5,6,1,1,1,2,1,1,1,-2,1,1],[1,-2,-2,-2,-2,-2,-2,-2,-2,13,-2,1,1],[1,1,1,-2,1,1,2,1,1,6,5,1,1],[1,1,1,-2,13,-2,-2,-2,-2,-2,-2,1,1],[1,1,1,5,6,1,2,1,-2,1,1,1,1],[1,1,1,-2,-2,-2,-2,13,-2,1,1,1,1],[1,1,1,1,1,-2,3,6,5,1,1,1,1]],this.maxLines=40,this.maxElfFuncCalls=10,this.elfFuncCallUsed=0,console_callback("info","Program the elf to the end goal in no more than "+this.maxLines+" lines of code and no more than "+this.maxElfFuncCalls+" elf command/function execution statements in your code."),$('<style type="text/css"> .CodeMirror-code div:nth-of-type('+(this.maxLines+1)+") {display: none;} </style>").appendTo("head"),$("#ingame_objects_body").html(""),$("#lollipops_collected").html(""),canvas.style.background="url('/imgs/mini_game1.png')";var e=this.get_grid_coords(3)[0];this.end_coords=this.get_grid_coords(4)[0],this.lollipop_coords=this.get_grid_coords(2),this.found_lollipop_coords=[],this.block_coords=this.get_grid_coords(-99,0),this.x=e.x*bw,this.y=e.y*bh,this.cur_xy={x:e.x,y:e.y},this.dest_gridx=e.x,this.dest_gridy=e.y,this.dest_x=e.x*bw,this.dest_y=e.y*bh,this.rotation=0,this.alpha=1,this.game_started=!1,this.speed=1,this.moving=!1,this.actions=[],this.frames=10,this.delta=1,this.last_time=0,this.__protos__={},this.__prot__={},this.dir="s",this.dead=!1,this.spring_dir,this.spring_dead=!1,this.anims={n:["/imgs/elf/n.png","/imgs/elf/nl.png","/imgs/elf/n.png","/imgs/elf/nr.png"],ni:0,s:["/imgs/elf/s.png","/imgs/elf/sl.png","/imgs/elf/s.png","/imgs/elf/sr.png"],si:0,e:["/imgs/elf/e.png","/imgs/elf/el.png","/imgs/elf/e.png","/imgs/elf/er.png"],ei:0,w:["/imgs/elf/w.png","/imgs/elf/wl.png","/imgs/elf/w.png","/imgs/elf/wr.png"],wi:0,d:new Image},this.anims.d.src="/imgs/elf/d.png",this.pit={vup:new Image,vdown:new Image,hup:new Image,hdown:new Image,arr:[]},this.pit.vup.src="/imgs/pit/pit_vup.png",this.pit.vdown.src="/imgs/pit/pit_vdown.png",this.pit.hup.src="/imgs/pit/pit_up.png",this.pit.hdown.src="/imgs/pit/pit_down.png",this.pit_coords=this.get_grid_coords(10,14),this.pit_coords.reverse();for(let e=0;e<this.pit_coords.length;e++){let t=!1,i=this.pit.hup,s=this.pit.hdown;[10,12].includes(this.pit_coords[e].num)&&(t=!0),[12,13].includes(this.pit_coords[e].num)&&(i=this.pit.vup,s=this.pit.vdown),this.pit.arr.push({up:t,u:i,d:s,x:this.pit_coords[e].x*bw,y:this.pit_coords[e].y*bh,gx:this.pit_coords[e].x,gy:this.pit_coords[e].y})}this.munchkin={anims:{n:["/imgs/munch/n.png","/imgs/munch/nl.png","/imgs/munch/n.png","/imgs/munch/nr.png"],s:["/imgs/munch/s.png","/imgs/munch/sl.png","/imgs/munch/s.png","/imgs/munch/sr.png"],e:["/imgs/munch/e.png","/imgs/munch/el.png","/imgs/munch/e.png","/imgs/munch/er.png"],w:["/imgs/munch/w.png","/imgs/munch/wl.png","/imgs/munch/w.png","/imgs/munch/wr.png"],d:new Image},animspeed:200,munchkins:[{grid_path:[{x:1,y:0}],moveto_grid:{x:0,y:0},gi:0,x:-1,y:-1,cur_xy:{x:0,y:0},ai:0,speed:.8,alpha:1,dead:!1,friendly:!1,last_grid_num:0,dir:"s",rotation:0,last_mod:0,code:{i:0,question:marked('\nCreate a function that will accept one argument. \n\nFor example:\n```\nfunction YourFunctionNameHere(one_argument) {\n    // some function code will go here\n    return some_desired_data\n}\n```\n\nYour created function will be passed a randomized *array* containing json *objects* as it\'s **one_argument**.\n\nFor example:\n```\n[\n    {"qpwo":76,"szixuchv":"lollipop","aiusywt":4,"xmzxcv":"sdfhj"},\n    {"aklgr":234,"yuigwer":"qwuieyr","xcmvp":21},\n    {"qopwue":"aosdfh","szixuchv":45,"hfas":35,"qiowphq":2,"zxc":"bgqwuygfvq"},\n    {"zxcvzkj":"azga","wieyr":36},\n]\n```\n\nYour created function must be able to iterate over this randomized array of json objects and *return* the string name of the *key* with a string *value* of **lollipop** *(see above example)*.\n\nOnce you have created this function and are sure it will return the desired string *key* name, pass your function as an argument to me:\n\n`elf.tell_munch(YourFunctionNameHere)`\n\nIf your passed function works properly, I will become friendly and move out of your way.\n```\n                        '),data:function(){let e=[];for(var t=0;t<getRandomInt(7,10);t++){let t={};for(var i=0;i<getRandomInt(7,10);i++)Math.random()>=.5?t[randomString(2,5)]=randomString(2,5):t[randomString(2,5)]=getRandomInt(10,50);e.push(t)}let s=e[Math.floor(Math.random()*e.length)],n=Object.keys(s),r=n[Math.floor(Math.random()*n.length)];return s[r]="lollipop",_elphgame.__prot__[this.i]=r,e},answer:function(e=0){if(isFunction(e)){var t;try{t=e(this.data())}catch(e){return console.error(e)}let i="Munchkin #"+this.i+": Correct, your function helped me find the key name of "+t+" with a value of lollipop",s="Munchkin #"+this.i+": Incorrect, your function did not return the proper key name with a value of lollipop";return t===_elphgame.__prot__[this.i]?(_elphgame.munchkin.munchkins[this.i].friendly=!0,console_callback("info",i)):console_callback("error",s)}console_callback("error","You did not submit a function!")}}}]},this.munchkin.anims.d.src="/imgs/munch/d.png";for(var t=0;t<this.lollipop_coords.length;t++){var i='<div class="pixel interact_cont lollipop_int" onclick="open_modal('+t+", false, `"+btoa("<div class='modal-content'><div class='modal-header'><span class='close closemodal'>&times;</span><h2 id='modal_header' style='text-align: center;'>LOLLIPOP #"+t+":</h2></div><div class='modal-body'>"+marked("**Info:**<br><br>Your elf must pick this lollipop up before reaching the end goal.<br><br>Your elf can also move towards this object using:<br><br>`elf.moveTo(lollipop["+t+"])`")+"</div></div>")+'`)"><span>'+t+"</span></div>";$("#ingame_objects_body").append(i)}for(t=0;t<this.munchkin.munchkins.length;t++){i='<div class="pixel interact_cont munchkin" onclick="open_modal('+t+", false, `"+btoa("<div class='modal-content'><div class='modal-header'><span class='close closemodal'>&times;</span><h2 id='modal_header' style='text-align: center;'>MUNCHKIN #"+t+" OBJECTIVE:</h2></div><div class='modal-body'>"+marked("**Objective:**<br>")+this.munchkin.munchkins[t].code.question+marked("**Note**<br><br>If you submit a correct answer to `elf.tell_munch(answer)`, then the munchkin will become friendly. <br><br>In order to run `elf.tell_munch(answer)` with elf *(#"+t+")*, you **must** be standing within 1 grid square of the munchkin.<br><br>You **must** specify the elf number when using `elf.ask_munch(0)`")+"<br></div></div>")+'`)"><span>'+t+"</span></div>";$("#ingame_objects_body").append(i)}this.win=new Image,this.win.src="/imgs/bonus.png",this.lose=new Image,this.lose.src="/imgs/lose.png",this.fail=new Image,this.fail.src="/imgs/fail.png",this.lollipop=new Image,this.lollipop.src="/imgs/pop/lollipop_alt.png",this.springs={off_tiles:[],on_tiles:[],arr:[]};for(t=0;t<22;t++){let e=new Image,i=(t+"").padStart(3,"0");e.src="/imgs/spring/spring"+i+".png",t<4?this.springs.on_tiles.push(e):this.springs.off_tiles.push(e)}this.spring_coords=this.get_grid_coords(5);for(t=0;t<this.spring_coords.length;t++)this.springs.arr.push({off:!1,oni:0,offi:0,x:this.spring_coords[t].x*bw,y:this.spring_coords[t].y*bh,last_mod:0});this.lever_coords=this.get_grid_coords(6),this.lever_coords.reverse(),this.levers={on:new Image,off:new Image,arr:[]},this.lever_code=[],this.levers.on.src="/imgs/lever/on.png",this.levers.off.src="/imgs/lever/off.png";for(t=0;t<this.lever_coords.length;t++)this.lever_code.push({i:t,question:marked("### Goal:\nYour task is to sum up all the values of `elf.get_lever(x)` for the lever you are on and intend to `elf.pull_lever(x)` and for all the previous levers.\n\nFor example, if you wanted to `elf.pull_lever(0)`, you could use:\n```\nvar num0 = elf.get_lever(0)\nelf.pull_lever(num0)\n```\n\nThen, if you wanted to pull lever **1**, you would expand the previous example to:\n```\nvar num0 = elf.get_lever(0)\nelf.pull_lever(num0)\nelf.moveUp(2)\nelf.moveLeft(3)\nvar num1 = elf.get_lever(1)\nelf.pull_lever(num0 + num1)\n```\n\nLikewise, if you wanted to pull lever **2**:\n```\nvar num0 = elf.get_lever(0)\nelf.pull_lever(num0)\nelf.moveUp(2)\nelf.moveLeft(3)\nvar num1 = elf.get_lever(1)\nelf.pull_lever(num0 + num1)\nelf.moveUp(2)\nelf.moveRight(5)\nvar num2 = elf.get_lever(2)\nelf.pull_lever(num0 + num1 + num2)\n\n**Important** - The above examples are only an example to show you the logic behind the levers for this level. However, using the above examples exactly is not likely to work as you may only use 10 elf function execution statements in your code. As such, using loops will be necessary. \n```\n\n**Result:**\n\nSuccessfully pulling a lever will trigger the next bridge to be raised so that you can pass safely.\n\n**Hint**\n\nThe above examples should illustrate what the intent is but remember that you are limited on the number of possible elf function executions you can use in your code. As such, using loops is a good idea.\n                    "),data:function(){return _elphgame.__protos__[this.i]=getRandomInt(1,30),_elphgame.__protos__[this.i]},answer:function(e=0){try{if("number"==typeof e){var t=0;for(let e=0;e<=this.i;e++)t+=_elphgame.__protos__[e];return void(t===e?(_elphgame.pit.arr[this.i].up=!0,_elphgame.levers.arr[this.i].off=!0,console_callback("info","Correct: The sum of my and all the previous levers's get_lever() is "+e)):console_callback("error","Incorrect: The sum of my and all the previous lever's get_lever() data is "+t+" but you submitted "+e))}}catch(e){return console.error(e)}},x:this.lever_coords[t].x,y:this.lever_coords[t].y}),this.__protos__[this.i]=getRandomInt(1,30),this.levers.arr.push({off:!1,x:this.lever_coords[t].x*bw,y:this.lever_coords[t].y*bh});for(t=0;t<this.lever_code.length;t++){Object.freeze(this.lever_code[t]);i='<div class="pixel interact_cont lever" onclick="open_modal('+t+", false, `"+btoa("<div class='modal-content'><div class='modal-header'><span class='close closemodal'>&times;</span><h2 id='modal_header' style='text-align: center;'>LEVER #"+t+" OBJECTIVE:</h2></div><div class='modal-body'>"+marked("**Objective:**<br>")+this.lever_code[t].question+marked("**Note**<br><br>If you submit a correct answer to `elf.pull_lever(answer)`, then the lever and its corresponding trap will be disabled. <br><br>In order to run `elf.pull_lever(answer)` with lever *(#"+t+")*, you **must** be standing in its grid square located at *(x"+this.lever_code[t].x+",y"+this.lever_code[t].y+")*.<br><br>You **must** specify the lever number when using `elf.get_lever(0)`")+"<br></div></div>")+'`)"><span>'+t+"</span></div>";$("#ingame_objects_body").append(i)}Object.freeze(this.lever_code),this.blocks=["/imgs/blk/block1.png","/imgs/blk/block2.png","/imgs/blk/block3.png","/imgs/blk/block4.png","/imgs/blk/block5.png"];for(t=0;t<this.blocks.length;t++){let e=this.blocks[t]+"";this.blocks[t]=new Image,this.blocks[t].src=e}Object.freeze(this.blocks),this.end_circle={min:24,max:40,cur:40,last_mod:0,shrink:!0},this.load_images_then_animate()}draw_numof_funcs_used(){var e="Completed in "+this.elfFuncCallUsed+" elf statements.",t=canvas_square_size/2-20*e.length/4,i=canvas_square_size;this.drawBoxAt(0,i-20,"rgba(255, 255, 255, 1.0)",canvas_square_size,20),ctx.save(),ctx.fillStyle="black",ctx.font="20px 'Roboto Mono', monospace",ctx.fillText(e,t,i-4),ctx.restore()}draw_text_to_grid(e,t,i){ctx.save(),ctx.fillStyle="black",ctx.font="10px Arial",ctx.fillText(i,e,t),ctx.restore()}get_munchkin_coords(){let e=[];for(let t=0;t<this.munchkin.munchkins.length;t++)e.push({x:this.munchkin.munchkins[t].moveto_grid.x,y:this.munchkin.munchkins[t].moveto_grid.y,num:20+t});return e}get_vars(){return{elf:{moveUp:this.moveUp.bind(this),moveDown:this.moveDown.bind(this),moveLeft:this.moveLeft.bind(this),moveRight:this.moveRight.bind(this),get_lever:this.get_lever.bind(this),pull_lever:this.pull_lever.bind(this),tell_munch:this.tell_munch.bind(this),ask_munch:this.ask_much.bind(this)},lollipop:this.lollipop_coords,lever:this.lever_coords,pit:this.pit_coords,yeeter:this.spring_coords,munchkin:this.get_munchkin_coords()}}win_or_lose(){return this.dead||4!==this.game_grid[this.cur_xy.y][this.cur_xy.x]?this.alpha<0&&(ctx.drawImage(this.lose,0,0),canvas.onclick=function(){canvas.onclick=null,EnableDisableBtn(),_elphgame=new Game},!0):(this.lollipop_coords.length?(ctx.drawImage(this.fail,0,0),canvas.onclick=function(){canvas.onclick=null,EnableDisableBtn(),_elphgame=new Game}):(ctx.drawImage(this.win,0,0),this.draw_numof_funcs_used(),[].filter.constructor(atob("X19QT1NUX1JFU1VMVFNfXyh7aGFzaDogQ3J5cHRvSlMuZW5jLkhleC5zdHJpbmdpZnkoQ3J5cHRvSlMuSG1hY1NIQTI1NihyZXNvdXJjZUlkICsgIjpCZWF0QWxsQm9udXNMZXZlbHMiLCAiY2QyYmY5ZWQxOWJlYmViN2Y2MTEwZDI3ZWI3MzMzODYiKSkscmVzb3VyY2VJZDogcmVzb3VyY2VJZCwgYWN0aW9uOiAiQmVhdEFsbEJvbnVzTGV2ZWxzIn0p"))()),!0)}__an__(e){if(this.cur_xy={x:Math.round(this.x/bw),y:Math.round(this.y/bh)},this.win_or_lose())return;if(requestAnimationFrame(this.__an__.bind(this)),this.delta=(e-this.last_time)/this.frames,this.last_time=e,this.dead||2!==this.game_grid[this.cur_xy.y][this.cur_xy.x]){if(this.dead||5!==this.game_grid[this.cur_xy.y][this.cur_xy.x]){if(!this.dead&&this.game_grid[this.cur_xy.y][this.cur_xy.x]>19){let e=this.game_grid[this.cur_xy.y][this.cur_xy.x]-20,t=this.munchkin.munchkins[e];t.friendly||t.dead||(this.dead=!0)}else if(!this.dead&&[10,11,12,13].includes(this.game_grid[this.cur_xy.y][this.cur_xy.x]))for(t=0;t<this.pit.arr.length;t++)if(!this.pit.arr[t].up&&this.pit.arr[t].gx===this.cur_xy.x&&this.pit.arr[t].gy===this.cur_xy.y){this.dead=!0;break}}else for(var t=0;t<this.spring_coords.length;t++)if(this.spring_coords[t].x===this.cur_xy.x&&this.spring_coords[t].y===this.cur_xy.y){this.springs.arr[t].off||(this.dead=!0,this.spring_dead=!0,this.springs.arr[t].off=!0);break}}else for(var t=0;t<this.lollipop_coords.length;t++)if(this.lollipop_coords[t].x===this.cur_xy.x&&this.lollipop_coords[t].y===this.cur_xy.y){this.lollipop_coords.splice(t,1),this.found_lollipop_coords.push({x:this.cur_xy.x+0,y:this.cur_xy.x+0}),$("#lollipops_collected").append('<div class="pixel collected"><span></span></div>');break}if(this.y==this.dest_y&&this.x==this.dest_x)if(this.moving&&(this.moving=!1),this.actions.length){var i=this.actions[0];this.actions.shift(),i[0](i[1])}else this.game_started&&!this.moving&&(this.alpha=-1);this.dead||(this.y<this.dest_y?this.y=Math.min(this.dest_y,this.y+this.speed*this.delta):this.y>this.dest_y?this.y=Math.max(this.dest_y,this.y-this.speed*this.delta):this.x<this.dest_x?this.x=Math.min(this.dest_x,this.x+this.speed*this.delta):this.x=Math.max(this.dest_x,this.x-this.speed*this.delta));let s=Math.abs(this.dest_y-this.y),n=Math.abs(this.dest_x-this.x),r=Math.max(s,n)%bh;this.anims[this.dir+"i"]=Math.max(0,Math.round(r/12-1)),this.draw()}get_grid_coords(e,t){let i=[];for(var s=0;s<this.game_grid.length;s++)for(var n=0;n<this.game_grid.length;n++)void 0===t&&this.game_grid[s][n]===e?i.push({x:n,y:s,num:this.game_grid[s][n]}):this.game_grid[s][n]>=e&&this.game_grid[s][n]<t&&i.push({x:n,y:s,num:this.game_grid[s][n]});return i}get_lever(e){if(this.lever_code[e])return this.lever_code[e].data();console_callback("error",e+" is not a valid lever number. For example: elf.get_lever(0)")}pull_lever(e){this.moving||this.actions.push([this.__pl__.bind(this),e])}__pl__(e){for(var t=0;t<this.lever_code.length;t++)if(this.lever_code[t].x===this.cur_xy.x&&this.lever_code[t].y===this.cur_xy.y)return this.lever_code[t].answer(e)}ask_much(e){if(this.munchkin.munchkins[e])return this.munchkin.munchkins[e].code.data();console_callback("error",e+" is not a valid munchkin number. For example: elf.ask_munch(0)")}tell_munch(e){this.moving||this.actions.push([this.__tm__.bind(this),e])}__tm__(e){let t=2*canvas_square_size,i=!1;for(var s=0;s<this.munchkin.munchkins.length;s++)if(!this.munchkin.munchkins[s].dead&&!this.munchkin.munchkins[s].friendly&&Math.abs(this.munchkin.munchkins[s].cur_xy.x-this.cur_xy.x)<=1&&Math.abs(this.munchkin.munchkins[s].cur_xy.y-this.cur_xy.y)<=1){let e=Math.hypot(this.munchkin.munchkins[s].x-this.x,this.munchkin.munchkins[s].y-this.y);e<t&&(t=e,i=this.munchkin.munchkins[s])}if(i)return i.code.answer(e);console_callback("error","You are not close enough to any munchkin to tell them an answer.")}__mu__(e=1){if(!this.moving){this.dir="n",this.moving=!0;let i=Math.max(0,this.dest_gridy-e),s=this.x/bw,n=this.y/bh,r=n+0;for(var t=n-1;t>=i&&this.game_grid[t][s]>0;t--)r=Math.max(0,t);this.dest_gridy=r,this.dest_y=this.dest_gridy*bw}}moveUp(e=1){this.moving||this.actions.push([this.__mu__.bind(this),e])}__md__(e=1){if(!this.moving){this.dir="s",this.moving=!0;let i=Math.min(num_of_rows_columns-1,this.dest_gridy+e),s=this.x/bw,n=this.y/bh,r=n+0;for(var t=n+1;t<=i&&this.game_grid[t][s]>0;t++)r=Math.min(num_of_rows_columns-1,t);this.dest_gridy=r,this.dest_y=this.dest_gridy*bw}}moveDown(e=1){this.moving||this.actions.push([this.__md__.bind(this),e])}__ml__(e=1){if(!this.moving){this.dir="w",this.moving=!0;let i=Math.max(0,this.dest_gridx-e),s=this.x/bw,n=this.y/bh,r=s+0;for(var t=s-1;t>=i&&this.game_grid[n][t]>0;t--)r=Math.max(0,t);this.dest_gridx=r,this.dest_x=this.dest_gridx*bw}}moveLeft(e=1){this.moving||this.actions.push([this.__ml__.bind(this),e])}__mr__(e=1){if(!this.moving){this.dir="e",this.moving=!0;let i=Math.min(num_of_rows_columns-1,this.dest_gridx+e),s=this.x/bw,n=this.y/bh,r=s+0;for(var t=s+1;t<=i&&this.game_grid[n][t]>0;t++)r=Math.min(num_of_rows_columns-1,t);this.dest_gridx=r,this.dest_x=this.dest_gridx*bw}}get_path(e,t,i=0){let s=t.x+0,n=t.y+0,r=[1,2,3,4,6,10,12];if(e.x<t.x)for(var a=t.x-1;a>=e.x&&r.includes(this.game_grid[t.y][a]);a--)s=a;else if(e.x>t.x)for(a=t.x+1;a<=e.x&&r.includes(this.game_grid[t.y][a]);a++)s=a;if(e.y<t.y)for(a=t.y-1;a>=e.y&&r.includes(this.game_grid[a][t.x]);a--)n=a;else if(e.y>t.y)for(a=t.y+1;a<=e.y&&r.includes(this.game_grid[a][t.x]);a++)n=a;let o={x:t.x,y:n},h={x:s,y:t.y};if(i)return{x:o,y:h};{let t=this.get_path(e,o,i=1),s=this.get_path(e,h,i=1),n=Math.hypot(e.x-t.y.x,e.y-t.y.y),r=Math.hypot(e.x-s.y.x,e.y-s.y.y),a=Math.hypot(e.x-t.x.x,e.y-t.x.y),c=[n,r,a,Math.hypot(e.x-s.x.x,e.y-s.x.y)];var l=Math.min.apply(Math,c);return n===l?[o,t.y]:r===l?[h,s.y]:a===l?[o,t.x]:[h,s.x]}}__mt__(e){if(this.cur_xy.x===e.x&&this.cur_xy.y===e.y)return;let t=this.get_path(e,this.cur_xy),i={x:this.cur_xy.x+0,y:this.cur_xy.y+0};var s=[];for(let e=0;e<t.length;e++)t[e].x>i.x?s.push([this.__mr__.bind(this),t[e].x-i.x]):t[e].x<i.x?s.push([this.__ml__.bind(this),i.x-t[e].x]):t[e].y>i.y?s.push([this.__md__.bind(this),t[e].y-i.y]):t[e].y<i.y&&s.push([this.__mu__.bind(this),i.y-t[e].y]),i.x=t[e].x+0,i.y=t[e].y+0;for(let e=s.length-1;e>=0;e--)this.actions.unshift(s[e])}moveTo(e){this.moving||("x"in e&&"y"in e?this.actions.push([this.__mt__.bind(this),e]):console_callback("error","provided moveTo(object) is not a valid in-game object"))}moveRight(e=1){this.moving||this.actions.push([this.__mr__.bind(this),e])}draw_end_circle(){this.last_time>this.end_circle.last_mod+50&&(this.end_circle.last_mod=this.last_time+0,this.end_circle.shrink?this.end_circle.cur===this.end_circle.min?(this.end_circle.shrink=!1,this.end_circle.cur+=1):this.end_circle.cur-=1:this.end_circle.cur===this.end_circle.max?(this.end_circle.shrink=!0,this.end_circle.cur-=1):this.end_circle.cur+=1),ctx.save(),ctx.beginPath();var e=Math.round(this.end_circle.cur/2),t=bw/2;ctx.arc(this.end_coords.x*bw+t,this.end_coords.y*bh+t,e,0,2*Math.PI,!1),ctx.fillStyle="rgba(255, 255, 255, 0.2)",ctx.strokeStyle="#00ff00",ctx.lineWidth=2,ctx.shadowColor="#00ff00",ctx.shadowBlur=10,ctx.shadowOffsetX=0,ctx.shadowOffsetY=0,ctx.stroke(),ctx.fill(),ctx.restore()}drawGrid(){for(let e=0;e<=num_of_rows_columns;e++)for(let t=0;t<=num_of_rows_columns;t++){let i=t*bh,s=e*bw;ctx.beginPath(),ctx.moveTo(.5+i+p,p),ctx.lineTo(.5+i+p,canvas_square_size+p),ctx.moveTo(p,.5+s+p),ctx.lineTo(canvas_square_size+p,.5+s+p),ctx.strokeStyle="#b3d7ff",ctx.stroke()}}draw_springs(){for(var e=0;e<this.springs.arr.length;e++){let t=this.springs.arr[e];if(t.off){let e=Math.min(this.springs.off_tiles.length-1,t.offi);ctx.drawImage(this.springs.off_tiles[e],t.x,t.y),this.last_time>t.last_mod+100&&(t.last_mod=this.last_time+0,t.offi+=1)}else{let e=Math.round(t.oni%this.springs.on_tiles.length);ctx.drawImage(this.springs.on_tiles[e],t.x,t.y),this.last_time>t.last_mod+100&&(t.last_mod=this.last_time+0,t.oni+=1)}}}death_animation(){ctx.save();var e=this.anims.d;if(this.spring_dead){var t=Math.round(e.naturalHeight/2);ctx.translate(this.x,this.y+t),ctx.rotate(this.rotation);var i=-Math.round(e.naturalWidth/2),s=-t;ctx.drawImage(e,i,s),void 0===this.spring_dir&&(this.x<canvas_square_size/2?this.spring_dir=2:this.x>canvas_square_size/2&&(this.spring_dir=-2)),this.x+=this.spring_dir*this.delta,this.y+=-Math.abs(this.spring_dir)*this.delta}else{ctx.globalAlpha=Math.max(0,this.alpha);t=Math.round(e.naturalHeight/2);ctx.translate(this.x,this.y+t),ctx.rotate(this.rotation);i=-Math.round(e.naturalWidth/2),s=-t;ctx.drawImage(e,i,s)}this.alpha-=.005*this.delta,this.rotation+=.1*this.delta,ctx.restore()}draw_levers(){for(var e=0;e<this.levers.arr.length;e++){var t=this.levers.arr[e];t.off?ctx.drawImage(this.levers.off,t.x,t.y):ctx.drawImage(this.levers.on,t.x,t.y),this.draw_text_to_grid(t.x+2,t.y+bh,e+"")}}munchkin_death(e){ctx.save(),ctx.globalAlpha=Math.max(0,e.alpha);var t=this.munchkin.anims.d,i=Math.round(t.naturalHeight/2);ctx.translate(e.cur_xy.x*bw+t.naturalWidth/2,e.cur_xy.y*bh+i),ctx.rotate(e.rotation);var s=-Math.round(t.naturalWidth/2),n=-i;ctx.drawImage(t,s,n),e.alpha-=.005*this.delta,e.rotation+=.1*this.delta,ctx.restore()}draw_munchkins(){this.munchkin.munchkins.forEach(function(e,t){let i=e.x+0,s=e.y+0;if(-1===e.x&&-1===e.y)e.x=e.grid_path[e.gi].x*bw,e.y=e.grid_path[e.gi].y*bh,e.cur_xy={x:Math.round(e.x/bw),y:Math.round(e.y/bh)},e.last_grid_num=this.game_grid[e.cur_xy.y][e.cur_xy.x]+0,i=e.x+0,s=e.y+0;else{if(this.game_grid[e.cur_xy.y][e.cur_xy.x]!==e.last_grid_num&&(this.game_grid[e.cur_xy.y][e.cur_xy.x]=e.last_grid_num+0),!e.dead&&[10,11,12,13].includes(this.game_grid[e.cur_xy.y][e.cur_xy.x]))for(var n=0;n<this.pit.arr.length;n++)if(!this.pit.arr[n].up&&this.pit.arr[n].gx===e.cur_xy.x&&this.pit.arr[n].gy===e.cur_xy.y){e.dead=!0;break}if(e.dead)return void(e.alpha>0&&this.munchkin_death(e));let t=e.gi+1;t>=e.grid_path.length&&(t=0);let i=e.grid_path[t].x*bw,s=e.grid_path[t].y*bh;e.y<s?e.y=Math.min(s,e.y+e.speed*this.delta):e.y>s?e.y=Math.max(s,e.y-e.speed*this.delta):e.x<i?e.x=Math.min(i,e.x+e.speed*this.delta):e.x=Math.max(i,e.x-e.speed*this.delta),e.x===i&&e.y===s&&(e.gi=t)}e.x>i?e.dir="e":e.x<i?e.dir="w":e.y<s?e.dir="n":e.y>s&&(e.dir="s"),e.cur_xy={x:Math.round(e.x/bw),y:Math.round(e.y/bh)},e.friendly||(e.last_grid_num=this.game_grid[e.cur_xy.y][e.cur_xy.x]+0,this.game_grid[e.cur_xy.y][e.cur_xy.x]=20+t),this.last_time>e.last_mod+this.munchkin.animspeed&&(e.last_mod=this.last_time+0,e.ai+=1);let r=Math.round(e.ai%this.munchkin.anims[e.dir].length);e.friendly?this.drawBoxAt(e.cur_xy.x*bw,e.cur_xy.y*bh,"rgba(0, 255, 153, 0.15)"):this.drawBoxAt(e.cur_xy.x*bw,e.cur_xy.y*bh),ctx.drawImage(this.munchkin.anims[e.dir][r],e.x,e.y),this.draw_text_to_grid(e.x+2,e.y+this.munchkin.anims[e.dir][r].naturalHeight-2,t)}.bind(this))}drawBoxAt(e,t,i="rgba(255, 179, 179, 0.3)",s=48,n=48){ctx.save(),ctx.beginPath(),ctx.rect(e,t,s,n),ctx.fillStyle=i,ctx.fill(),ctx.restore()}draw_pits(){for(let e=0;e<this.pit.arr.length;e++)this.pit.arr[e].up?ctx.drawImage(this.pit.arr[e].u,this.pit.arr[e].x,this.pit.arr[e].y):ctx.drawImage(this.pit.arr[e].d,this.pit.arr[e].x,this.pit.arr[e].y)}draw(){ctx.clearRect(0,0,canvas.width,canvas.height),this.draw_end_circle(),this.draw_pits(),this.drawGrid(),this.block_coords.forEach(function(e){let t=this.blocks[Math.abs(this.game_grid[e.y][e.x])-1];ctx.drawImage(t,e.x*bw,e.y*bh)}.bind(this)),this.lollipop_coords.forEach(function(e,t){let i=e.x*bw,s=e.y*bh;this.draw_text_to_grid(i+2,s+this.lollipop.naturalHeight-2,t+""),ctx.drawImage(this.lollipop,i,s)}.bind(this)),this.draw_levers(),this.draw_springs(),this.draw_munchkins(),this.dead?this.death_animation():ctx.drawImage(this.anims[this.dir][this.anims[this.dir+"i"]],this.x,this.y)}IsImageLoaded(e){return!!e.complete&&0!==e.naturalWidth}load_image(e,t,i){for(var s=0;s<e[i].length;s++)if("string"==typeof e[i][s]){let t=e[i][s]+"";e[i][s]=new Image,e[i][s].src=t}else this.IsImageLoaded(e[i][s])&&t.push(!0)}load_images_then_animate(){var e=[];this.load_image(this.anims,e,"n"),this.load_image(this.anims,e,"s"),this.load_image(this.anims,e,"e"),this.load_image(this.anims,e,"w"),this.load_image(this.munchkin.anims,e,"n"),this.load_image(this.munchkin.anims,e,"s"),this.load_image(this.munchkin.anims,e,"e"),this.load_image(this.munchkin.anims,e,"w"),e.length===this.anims.n.length+this.anims.s.length+this.anims.w.length+this.anims.e.length+this.munchkin.anims.n.length+this.munchkin.anims.s.length+this.munchkin.anims.w.length+this.munchkin.anims.e.length?(this.draw(),requestAnimationFrame(this.__an__.bind(this))):setTimeout(this.load_images_then_animate.bind(this),100)}}function evalgame(user_code){EnableDisableBtn();var sccAwiaicSaX2YoR=_elphgame.get_vars();_elphgame.game_started=!0;var elf=sccAwiaicSaX2YoR.elf,lollipop=sccAwiaicSaX2YoR.lollipop,lever=sccAwiaicSaX2YoR.lever,pit=sccAwiaicSaX2YoR.pit,yeeter=sccAwiaicSaX2YoR.yeeter,munchkin=sccAwiaicSaX2YoR.munchkin;eval(user_code)}function allNodes(e,t,i,s){if(s=s||[],"object"!=typeof e||Array.isArray(e)){if(Array.isArray(e))for(var n=0;n<e.length;n++)"object"==typeof e[n]&&allNodes(e[n],t,i,s)}else for(let n in e)n===t&&e[n]===i?s.push(e):allNodes(e[n],t,i,s);return s}function recurse_object_property_properties(e,t,i){if("name"in e&&t.includes(e.name))t.push(i);else if("object"in e&&t.includes(e.object.name))t.push(i);else if("property"in e&&t.includes(e.property.name))t.push(i);else if("properties"in e)for(var s=0;s<e.properties.length;s++)recurse_object_property_properties(e.properties[s].value,t,i);else if("elements"in e)for(s=0;s<e.elements.length;s++)recurse_object_property_properties(e.elements[s],t,i)}function recurse_object_property_properties_for_funcs(e,t){if("name"in e)t.push(e.name);else if("object"in e)t.push(e.object.name);else if("property"in e)t.push(e.property.name);else if("properties"in e)for(var i=0;i<e.properties.length;i++)recurse_object_property_properties(e.properties[i].value,t);else if("elements"in e)for(i=0;i<e.elements.length;i++)recurse_object_property_properties(e.elements[i],t)}function allObjectAndPropertyKeys(e,t){if("object"!=typeof e||Array.isArray(e)){if(Array.isArray(e))for(var i=0;i<e.length;i++)"object"==typeof e[i]&&allObjectAndPropertyKeys(e[i],t)}else recurse_object_property_properties(e.init,t,e.id.name)}function parseUserJS(e){var t=acorn.loose.parse(e,{ecmaVersion:2020}),i=allNodes(t,"type","VariableDeclarator"),s=Object.keys(_elphgame.get_vars().elf);s.push("elf"),allObjectAndPropertyKeys(i,s);for(var n=allNodes(t,"type","CallExpression"),r=[],a=0;a<n.length;a++)recurse_object_property_properties_for_funcs(n[a].callee,r);var o=0;return r.forEach(function(e,t){s.includes(e)&&(o+=1)}),o}function open_modal(e,t=!0,i=""){var s=$(modal);if(t){var n=$("#modal"+e);s.html(n.html())}else s.html(atob(i));s.css("display","block")}function beautify_console(e=0){for(var t=$($(".content")[0]),i=_elphgame.maxLines,s=js_beautify(jseditor.getValue(),{indent_size:2}).split("\n"),n=[],r=0;r<s.length;r++)s[r].includes("eval(")||n.push(s[r]);n.length=Math.min(n.length,_elphgame.maxLines);var a=jseditor.getCursor().line,o=jseditor.getCursor().ch,h=n.length+0;for(r=0;r<i-h;r++)n.push("");jseditor.setValue(n.join("\n"));i=_elphgame.maxLines;t.find(".editor").data("minLines",i);var l=i-jseditor.lineCount(),c=jseditor.getCursor().line;for(r=0;r<l;r++)jseditor.replaceRange("\n",{line:c}),c++;if(8==e)jseditor.setCursor({line:a,ch:o});else{var d=jseditor.getLine(a);if(d){var m=d.length;jseditor.setCursor({line:a,ch:m})}else jseditor.setCursor({line:a,ch:o})}}function runGame(){if(!_elphgame.moving){beautify_console();var e=jseditor.getValue().trim();if(e.length>0){var t=parseUserJS(e);t<=_elphgame.maxElfFuncCalls?(_elphgame.elfFuncCallUsed=t+0,evalgame(e)):console_callback("error","Too many elf commands used ("+t+"). Max is "+_elphgame.maxElfFuncCalls+".")}}}function EnableDisableBtn(){var e=$("#runButton");e.is(":disabled")?e.prop("disabled",!1):e.prop("disabled",!0)}var console_callback=(e,t)=>{var i=e+"";i=i.charAt(0).toUpperCase()+i.slice(1),"object"==typeof t&&null!==t&&"0"in t&&(t=JSON.stringify(t[0])),con.innerHTML+='<div class="console_entry"><div class="'+e+'">'+i+':\n    </div><span class="clog_inner">'+t+"</span></div><br>",con.scrollTop=con.scrollHeight};function convert_markdown(){$(".modal-body").each(function(e,t){var i=$(t),s=i.text();i.html(marked(s))})}var modal=document.getElementById("menu_modal"),con=document.getElementById("console_output"),jseditor,_elphgame;const urlVars=__PARSE_URL_VARS__(),resourceId=urlVars.resourceId;resourceId||console.error(atob("Tm8gcmVzb3VyY2UgSUQgcHJvdmlkZWQh")),$(function(){_elphgame=new Game,convert_markdown();let e=marked("### About \n\nFollow the zig-zag being careful not to step on any traps *(or get yeeted off the map)*.\n\n### Note\n\nThe `elf.moveTo(object)` function has been disabled for this challenge.\n\n### Hint\n\nUse loops and track incrementing values to take the exact number of steps.");open_modal(1,!1,btoa("<div class='modal-content'><div class='modal-header'><span class='close closemodal'>&times;</span><h2 id='modal_header' style='text-align: center;'>Level 8 - <i>For Loop Finale</i></h2></div><div class='modal-body'>"+e+"</div></div>")),$(document).on("click",".closemodal",function(){modal.style.display="none"}),$(document).on("click","#menu_modal",function(e){"menu_modal"===e.target.id&&(modal.style.display="none")}),window.ConsoleSubscriber.bind(console_callback),window.onerror=function(e,t,i){return console_callback("error",e),!1},$("#clearconsole").click(function(){con.innerHTML=""}),$("#consoleexpand").click(function(){var e=$("#console");e.hasClass("expanded")?e.removeClass("expanded"):e.addClass("expanded")});var t={autoRefresh:!0,firstLineNumber:1,lineNumbers:!0,smartIndent:!0,lineWrapping:!1,indentWithTabs:!0,refresh:!0,mode:"javascript"};$(".content").each(function(){var e=$(this),i=CodeMirror.fromTextArea(e.find(".editor")[0],t);e[0].editor=i,jseditor=i,i.on("viewportChange",function(e,t){}),i.on("changes",function(e,t){jseditor.lineCount()>=_elphgame.maxLines&&i.replaceRange("",{line:_elphgame.maxLines,ch:0},{line:_elphgame.maxLines+1,ch:0})}),i.save(),beautify_console()}),$(document).on("keydown",".CodeMirror",function(e,t){}),$("#runButton").click(function(){runGame()})});
